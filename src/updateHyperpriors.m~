function[ priors ] = updateHyperpriors( D, par, priors, info )

expect = getExpectations(par);

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

priors.Fprec1 = eye(info.nclus) * ...
    info.nclus / ( (par.Fmean(:,1)-priors.Fmean1)' ...
		  * (par.Fmean(:,1)-priors.Fmean1) ...
		  + trace(pinv(par.Fprec{1})) );

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

priors.Lshape = fsolve(@(x) priorHYPshapederiv(x, priors.Lscale, ...
					       par.Lshape, ...
					       par.Lscale),
		       priors.Lshape);
priors.Lscale = priors.Lshape/expect.L;

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% UPDATE *GAM* STUFF

%%psiroot = fsolve(@psi,1.4616);
%%psiroot = 1.461632143;

priors.gamscaleHYPshape = fsolve(@(x) priorHYPshapederiv(x, priors.gamscaleHYPscale, ...
							 par.gamscaleHYPshape, ...
							 par.gamscaleHYPscale),
				 priors.gamscaleHYPshape);
priors.gamscaleHYPscale = priors.gamscaleHYPshape / expect.gamscaleHYP;

priors.gamshape = fsolve(@(x) priorshapederiv(x, par.gamscaleHYPshape, ...
					      par.gamscaleHYPscale, ...
					      par.gamshape,par.gamscale),
			 priors.gamshape);

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% UPDATE *SIG* STUFF

priors.SIGscaleHYPshape = fsolve(@(x) priorHYPshapederiv(x, priors.SIGscaleHYPscale, ...
							 par.SIGscaleHYPshape, ...
							 par.SIGscaleHYPscale),
				 priors.SIGscaleHYPshape);
priors.SIGscaleHYPscale = priors.SIGscaleHYPshape / expect.SIGscaleHYP;

priors.SIGshape = fsolve(@(x) priorshapederiv(x, par.SIGscaleHYPshape, ...
					      par.SIGscaleHYPscale, ...
					      par.SIGshape,par.SIGscale),
			 priors.SIGshape);

%% priors.gamshape
%% priors.gamscaleHYPshape
%% priors.SIGshape
%% priors.SIGscaleHYPshape

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
priors.Sconstprec = ones(info.nclus,1) * ...
    info.nclus / ( (par.Sconstmean-priors.Sconstmean)' ...
		  * (par.Sconstmean-priors.Sconstmean) ...
		  + trace(pinv(diag(par.Sconstprec))) );

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
for j = 1:info.nclus
  priors.Sprec{j} = eye(info.nclus) * ...
      info.nclus / ( (par.Smean(j,:)-priors.Smean(j,:)) ...
		    * (par.Smean(j,:)-priors.Smean(j,:))' ...
		    + trace(pinv(par.Sprec{j})) );
end


end