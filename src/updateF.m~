function[ par ] = updateF( t, D, par, priors, info )

expect = getExpectations( par );
tind = t+1;
tdatind = info.Tdatind(info.Tdat==t);

%% update Fprec

if t == 0
    % if t is the first time point in the model
    ppart1 = priors.Fprec1;
else
    ppart1 = expect.SIG;
end

if t == info.Tmax
    % if t is the last time point in the model
    ppart2 = 0;
else
    temp = zeros(info.nclus);
    for i = 1:info.nclus
      varmat = zeros(info.nclus);
      for j = 1:info.nclus
	varmat(j,j) = pinv(par.Sprec{j})(i,i);
      end
      temp(i,i) = trace(expect.SIG*varmat);
    end
    ppart2 = par.Smean'*expect.SIG*par.Smean + temp;
end

if info.N(tind)>0
    % if the time point t has data
    ppart3 = zeros(info.nclus);
    for g = 1:info.G
      for i=1:info.nclus
	ppart3(i,i) = ppart3(i,i) + par.mship(i,g) ...
	    * expect.gam(i,tdatind);
      end
    end
else
    ppart3 = 0;
end

%4356
%ppart1
%ppart2
%ppart3

par.Fprec{tind} = ppart1 + ppart2 + ppart3;

if( sum(diag(par.Fprec{tind})<0)>0 )
  ppart1
  ppart2
  ppart3
  priors
  par.Fprec{tind}
  %par.Sprec
  error('diag(par.Fprec{tind}) has a negative element')
end


%tind
%logdet(par.Fprec{tind})
% if(prod(diag(par.Fprec{tind}))==0)
%     ppart1
%     error('Determinant is zero.');
% end

%% update Fmean (uses current Fprec just calculated)
if t == 0
    % if t is the first time point in the model
    mpart1 = priors.Fprec1 * priors.Fmean1;
else
    mpart1 = expect.SIG * (par.Smean * par.Fmean(:,tind-1) + par.Sconstmean);
end

if t == info.Tmax
    % if t is the last time point in the model
    mpart2 = 0;
else
    mpart2 = par.Smean' * expect.SIG * (par.Fmean(:,tind+1) - par.Sconstmean);
end

if info.N(tind)>0
  %% if the time point t has data
  mpart3 = zeros(info.nclus,1);
  for g = 1:info.G
    for i=1:info.nclus
      mpart3(i,1) = mpart3(i,1) + par.mship(i,g) ...
	  * ( expect.gam(i,tdatind) * par.mumean(tdatind,g) );
    end
  end
else
  mpart3 = 0;
end

%% t
%% [ ppart1\mpart1 ppart1 ]
%% [ ppart2\mpart2 ppart2 ]
%% [ ppart3\mpart3 ppart3 ]
% par.Fprec{tind} 
% (mpart1+mpart2+mpart3)

warning off
par.Fmean(:,tind) = par.Fprec{tind} \ (mpart1+mpart2+mpart3);
warning on

%%[ par.Fmean(:,tind) par.mship * par.mumean(tdatind,:)' ]

end