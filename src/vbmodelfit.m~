function[ par priors finalllh iter ] = vbmodelfit( D, priors, info )
%function[ par ] = vbmodelfit( D, priors, info )

maxiters = [ 1000 1500 ]
llhvec = [];

% this parameter sets the number of initial updates to be done, as well as
% the number of iterations between llh calculation
initialIterations = 1;
displayIteration = 10;

iter = 0;
llh = 1;
oldllh = -1e11;

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

par = setpar(D, priors, info);

if( info.G ~= size(D,2) )
    disp('Adjusting info.G to reflect data set size.\n');
    info.G = size(D,2);
end

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% initialize some parameters to avoid possible problems

%%par = initClust( D, par, info );

%% fit *mu* and *L* to the data first
%%for i = 1:100 %maxiters(1)
while abs(llh-oldllh) > 1e-2  && iter<maxiters(1)
  iter = iter+1;
  for t = info.Tdat
    par = updateMU( t, D, par, priors, info );
  end
  par = updateL( D, par, priors, info );

  if round(iter/displayIteration)==iter/displayIteration
    oldllh = llh;
    llh = geneInterLikelihood( D, par, priors, info );
    llhvec = [ llhvec; llh ];
    iter
    %%abs(llh-oldllh)
  end
end

[ iter llh ]

par.gamshape(:,:) = 1;
for t = 1:info.Tmax+1
    par.Fprec{t} = diag(1./var(par.Fmean,1,2));
end

%% %% fit the *F*, *GAM*
%% for i = 1:5 %%maxiters(1)
%% %%oldllh = -1e11;
%% %%while abs(llh-oldllh) > 1e-5  && iter<maxiters(1)
%%   par = getMembership( par, priors, info, 1, D );
%%   %%par = updateGAM( D, par, priors, info );
%%   for t = info.Tdat
%%     par = updateF( t, D, par, priors, info );
%%   end
%% 
%%   oldllh = llh;
%%   llh = geneInterLikelihood( D, par, priors, info );
%%   llhvec = [ llhvec; llh ];
%% end
%% 
%% [ iter llh ]


%%priors = updateHyperpriors( D, par, priors, info );

%% fit the *F*, *GAM*, and add *mship*
%%for i = 1:maxiters(1)
oldllh = -1e11;
while abs(llh-oldllh) > 1e-1  && iter<maxiters(1)
  iter = iter+1;
  par = getMembership( par, priors, info, 1, D );
  for j = 1:3
    for t = info.Tdat
      par =  updateMU( t, D, par, priors, info );
      par =  updateF( t, D, par, priors, info );
    end
    par = updateL( D, par, priors, info );
    par = updateGAM( D, par, priors, info );
  end

  if round(iter/displayIteration)==iter/displayIteration
    oldllh = llh;
    llh = geneInterLikelihood( D, par, priors, info );
    llhvec = [ llhvec; llh ];
    iter
    %%abs(llh-oldllh)
  end
end

[ iter llh ]

%% for i = 1:maxiters(1)
%%   par = getMembership( par, priors, info, 1, D );
%%   par = updateGAM( D, par, priors, info );
%%   %%par = forwardPass( D, par, priors, info );
%%   for t = info.Tdat
%%     %%par =  updateMU( t, D, par, priors, info );
%%     par =  updateF( t, D, par, priors, info );
%%   end
%%   %%par = updateSIG( D, par, priors, info );
%%   %%par = updateS( D, par, priors, info );
%% end

%% fit *S* and *SIG*
%%for i = 1:maxiters(1)
oldllh = -1e11;
while abs(llh-oldllh) > 1e-1  && iter<maxiters(1)
  iter = iter+1;
  par = updateS( D, par, priors, info );
  par = updateSIG( D, par, priors, info );

  if round(iter/displayIteration)==iter/displayIteration
    oldllh = llh;
    llh = geneInterLikelihood( D, par, priors, info );
    llhvec = [ llhvec; llh ];
    iter
    %%abs(llh-oldllh)
  end
end

[ iter llh ]

oldllh = -1e11;
while abs(llh-oldllh) > 1e-1  && iter<maxiters(1)
  iter = iter+1;
  priors = updateHyperpriors( D, par, priors, info );
  par = getMembership( par, priors, info, 1, D );
  %%par = forwardPass( D, par, priors, info );
  par = updateGAM( D, par, priors, info );
  %%par = updateL( D, par, priors, info );
  par = updateSIG( D, par, priors, info );
  par = updateS( D, par, priors, info );

  if round(iter/displayIteration)==iter/displayIteration
    oldllh = llh;
    llh = geneInterLikelihood( D, par, priors, info );
    llhvec = [ llhvec; llh ];
    iter
    abs(llh-oldllh)
  end
end

[ iter llh ]

%%for i = 1:10
%%length(llhvec)
oldllh = -1e11;
while abs(llh-oldllh) > 1e-1  && iter<maxiters(2)
    [ par priors ] = updateVB( D, par, priors, info, iter );
    iter = iter+1;

    if round(iter/displayIteration)==iter/displayIteration
      oldllh = llh;
      llh = geneInterLikelihood( D, par, priors, info );
      llhvec = [ llhvec; llh ];
      iter
      abs(llh-oldllh)
    end
end

totaliter = iter


%% rng = 1:size(llhvec,1);
%% llhvec = llhvec - repmat(llhvec(rng(1),:),size(llhvec,1),1);
%% 
%% figure; plot(llhvec(rng,:));
%%
%% %%figure; plot(llhvec(rng,1)); title('fits for D');
%% %%figure; plot(llhvec(rng,4:size(llhvec,2))); title('remaining llhs');
%% 
%% llhvec(rng,:)

finalllh = llh(1);

end
